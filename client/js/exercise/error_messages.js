export const globalVarDoesNotExistMsg = (varName) => { return `Die globale Variable <i>${varName}</i> existiert nicht!` };
export const localVarDoesNotExistMsg = (varName) => { return `Die lokale Variable <i>${varName}</i> existiert nicht!` };
export const isGlobalNotLocalMsg = (varName) => { return `Die Variable <i>${varName}</i> ist global, nicht lokal angelegt!` };
export const isLocalNotGlobalMsg = (varName) => { return `Die Variable <i>${varName}</i> ist lokal, nicht global angelegt!` };
export const wrongValueMsg = (varName, val) => { return `Der Wert von Variable <i>${varName}</i> ist nicht <i>${val}</i>!` };
export const isNotConstMsg = (varName) => { return `Die Variable <i>${varName}</i> ist nicht als Konstante angelegt!` };
export const wrongTypeMsg = (varName, requiredType) => { return `Die Variable <i>${varName}</i> ist nicht vom Typ <i>${requiredType}</i>!` };
export const stringIsEmptyMsg = (varName) => { return `Die Variable <i>${varName}</i> vom Typ String hat keinen Inhalt!` };
export const scriptDoesNotContainMsg = (requiredText) => { return `Dein Script enthält kein <i>${requiredText}</i>!` };
export const elDoesNotExistMsg = (elID) => { return `Das HTML Element <i>${elID}</i> existiert nicht!` };
export const elWrongTagMsg = (elID, currentTag, requiredTag) => { return `Das HTML Element <i>${elID}</i> ist nicht das gesuchte Tag (aktuell: ${currentTag}, gewünscht: ${requiredTag})!` };
export const elWrongInnerTextMsg = (elID, innerText) => { return `Der innerText des HTML Elements <i>${elID}</i> ist nicht <i>${innerText}</i>!` };
// export const elWrongStyleValueMsg = (elID, styleName, styleValue) => { return `Der Style <i>${styleName}</i> von HTML Element <i>${elID}</i> ist nicht <i>${styleValue}</i>!` };
export const elWrongStyleValueMsg = (elID, styleName, styleValue) => { return `Der Style von HTML Element oder Klasse <i>${elID}</i> ist nicht korrekt!` };
export const logCallDoesNotExist = (strValue) => { return `Der console.log-Aufruf mit Wert <i>${strValue}</i> existiert nicht!` };
export const validationErrorPossibleUndefinedObjMsg = () => { return `Es kam zu einem Fehler während der Validierung, wahrscheinlich ist ein benötigtes Element undefiniert oder null. Prüfe ob du alle Variablen und IDs mit dem korrekten Namen/der korrekten ID versehen hast!` }; 